{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar\\\\OneDrive\\\\Documents\\\\host\\\\menm\\\\ragnar\\\\src\\\\pages\\\\movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport ReactPlayer from \"react-player\";\nimport { db } from \"../firebaseConfig\";\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MoviesPage() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [newMovie, setNewMovie] = useState({\n    name: \"\",\n    url: \"\",\n    premiered: \"\",\n    description: \"\",\n    credits: \"\"\n  });\n  const [editingMovie, setEditingMovie] = useState(null);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    const querySnapshot = await getDocs(collection(db, \"movies\"));\n    setMovies(querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    })));\n  };\n  const extractVideoId = url => {\n    try {\n      let videoId = \"\";\n      const parsedUrl = new URL(url);\n      if (parsedUrl.hostname.includes(\"youtube.com\")) {\n        videoId = parsedUrl.searchParams.get(\"v\");\n      } else if (parsedUrl.hostname.includes(\"youtu.be\")) {\n        videoId = parsedUrl.pathname.substring(1);\n      }\n      return videoId;\n    } catch (error) {\n      console.error(\"Error extracting Video ID:\", error);\n      return null;\n    }\n  };\n  const extractSummary = description => {\n    const lines = description.split(\"\\n\");\n    let summary = \"\";\n    for (const line of lines) {\n      if (line.trim() === \"\") break;\n      summary += line + \" \";\n    }\n    return summary.trim();\n  };\n  const fetchYouTubeDetails = async videoUrl => {\n    const videoId = extractVideoId(videoUrl);\n    if (!videoId) {\n      alert(\"Invalid YouTube URL.\");\n      return;\n    }\n    console.log(\"Extracted Video ID:\", videoId);\n    try {\n      const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`);\n      const data = await response.json();\n      console.log(\"YouTube API Response:\", data);\n      if (!data.items || data.items.length === 0) {\n        alert(\"No details found for this video.\");\n        return;\n      }\n      const videoDetails = data.items[0].snippet;\n      const summary = extractSummary(videoDetails.description);\n      setNewMovie({\n        ...newMovie,\n        name: videoDetails.title,\n        description: summary,\n        premiered: videoDetails.publishedAt.split(\"T\")[0]\n      });\n    } catch (error) {\n      console.error(\"Error fetching video details:\", error);\n    }\n  };\n  const handleAddMovie = async () => {\n    if (!newMovie.name || !newMovie.url) {\n      alert(\"Movie Name and URL are required\");\n      return;\n    }\n    await addDoc(collection(db, \"movies\"), newMovie);\n    setNewMovie({\n      name: \"\",\n      url: \"\",\n      premiered: \"\",\n      description: \"\",\n      credits: \"\"\n    });\n    fetchMovies();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 border rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold\",\n        children: \"Add New Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YouTube URL\",\n        value: newMovie.url,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          url: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchYouTubeDetails(newMovie.url),\n        children: \"Fetch Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: newMovie.name,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Premiered Date\",\n        value: newMovie.premiered,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: newMovie.description,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddMovie,\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-item p-4 border rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: movie.url,\n          controls: true,\n          width: \"100%\",\n          height: \"180px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Premiered:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 16\n          }, this), \" \", movie.premiered]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 16\n          }, this), \" \", movie.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesPage, \"dUsJU1e7wdoKabjNnn5iQMp5nME=\");\n_c = MoviesPage;\nexport default MoviesPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"names":["React","useState","useEffect","NavigationBar","ReactPlayer","db","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","jsxDEV","_jsxDEV","MoviesPage","_s","movies","setMovies","newMovie","setNewMovie","name","url","premiered","description","credits","editingMovie","setEditingMovie","fetchMovies","querySnapshot","docs","map","id","data","extractVideoId","videoId","parsedUrl","URL","hostname","includes","searchParams","get","pathname","substring","error","console","extractSummary","lines","split","summary","line","trim","fetchYouTubeDetails","videoUrl","alert","log","response","fetch","process","env","REACT_APP_YOUTUBE_API_KEY","json","items","length","videoDetails","snippet","title","publishedAt","handleAddMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","readOnly","movie","controls","width","height","_c","$RefreshReg$"],"sources":["C:/Users/sagar/OneDrive/Documents/host/menm/ragnar/src/pages/movies.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport NavigationBar from \"../components/NavigationBar\";\r\nimport ReactPlayer from \"react-player\";\r\nimport { db } from \"../firebaseConfig\";\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\r\n\r\nfunction MoviesPage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [newMovie, setNewMovie] = useState({ name: \"\", url: \"\", premiered: \"\", description: \"\", credits: \"\" });\r\n  const [editingMovie, setEditingMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const fetchMovies = async () => {\r\n    const querySnapshot = await getDocs(collection(db, \"movies\"));\r\n    setMovies(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n  };\r\n\r\n  const extractVideoId = (url) => {\r\n    try {\r\n      let videoId = \"\";\r\n      const parsedUrl = new URL(url);\r\n\r\n      if (parsedUrl.hostname.includes(\"youtube.com\")) {\r\n        videoId = parsedUrl.searchParams.get(\"v\");\r\n      } else if (parsedUrl.hostname.includes(\"youtu.be\")) {\r\n        videoId = parsedUrl.pathname.substring(1);\r\n      }\r\n\r\n      return videoId;\r\n    } catch (error) {\r\n      console.error(\"Error extracting Video ID:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const extractSummary = (description) => {\r\n    const lines = description.split(\"\\n\");\r\n    let summary = \"\";\r\n\r\n    for (const line of lines) {\r\n      if (line.trim() === \"\") break;\r\n      summary += line + \" \";\r\n    }\r\n    return summary.trim();\r\n  };\r\n\r\n  const fetchYouTubeDetails = async (videoUrl) => {\r\n    const videoId = extractVideoId(videoUrl);\r\n\r\n    if (!videoId) {\r\n      alert(\"Invalid YouTube URL.\");\r\n      return;\r\n    }\r\n\r\n    console.log(\"Extracted Video ID:\", videoId);\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      console.log(\"YouTube API Response:\", data);\r\n\r\n      if (!data.items || data.items.length === 0) {\r\n        alert(\"No details found for this video.\");\r\n        return;\r\n      }\r\n\r\n      const videoDetails = data.items[0].snippet;\r\n      const summary = extractSummary(videoDetails.description);\r\n\r\n      setNewMovie({\r\n        ...newMovie,\r\n        name: videoDetails.title,\r\n        description: summary,\r\n        premiered: videoDetails.publishedAt.split(\"T\")[0],\r\n      });\r\n    } catch (error) {\r\n      console.error(\"Error fetching video details:\", error);\r\n    }\r\n  };\r\n\r\n  const handleAddMovie = async () => {\r\n    if (!newMovie.name || !newMovie.url) {\r\n      alert(\"Movie Name and URL are required\");\r\n      return;\r\n    }\r\n\r\n    await addDoc(collection(db, \"movies\"), newMovie);\r\n    setNewMovie({ name: \"\", url: \"\", premiered: \"\", description: \"\", credits: \"\" });\r\n    fetchMovies();\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <NavigationBar />\r\n      <h1 className=\"text-2xl font-bold\">Movies</h1>\r\n\r\n      <div className=\"mb-4 p-4 border rounded-lg shadow-lg\">\r\n        <h2 className=\"text-xl font-semibold\">Add New Movie</h2>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"YouTube URL\"\r\n          value={newMovie.url}\r\n          onChange={(e) => setNewMovie({ ...newMovie, url: e.target.value })}\r\n        />\r\n        <button onClick={() => fetchYouTubeDetails(newMovie.url)}>Fetch Details</button>\r\n\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Name\"\r\n          value={newMovie.name}\r\n          onChange={(e) => setNewMovie({ ...newMovie, name: e.target.value })}\r\n        />\r\n        <input type=\"text\" placeholder=\"Premiered Date\" value={newMovie.premiered} readOnly />\r\n        <textarea\r\n          placeholder=\"Description\"\r\n          value={newMovie.description}\r\n          onChange={(e) => setNewMovie({ ...newMovie, description: e.target.value })}\r\n        />\r\n\r\n        <button onClick={handleAddMovie}>Add Movie</button>\r\n      </div>\r\n\r\n      <div className=\"movie-list\">\r\n        {movies.map((movie) => (\r\n          <div key={movie.id} className=\"movie-item p-4 border rounded-lg shadow-lg\">\r\n            <ReactPlayer url={movie.url} controls width=\"100%\" height=\"180px\" />\r\n            <h3 className=\"text-lg font-semibold\">{movie.name}</h3>\r\n            <p><strong>Premiered:</strong> {movie.premiered}</p>\r\n            <p><strong>Description:</strong> {movie.description}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}