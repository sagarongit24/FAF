{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar\\\\OneDrive\\\\Documents\\\\host\\\\menm\\\\ragnar\\\\src\\\\pages\\\\movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport { db } from \"../firebaseConfig\";\nimport { collection, getDocs, addDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport \"../styles/movies.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction MoviesPage() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [youtubeURL, setYoutubeURL] = useState(\"\");\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    const querySnapshot = await getDocs(collection(db, \"movies\"));\n    setMovies(querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    })));\n  };\n  const extractVideoId = url => {\n    try {\n      let videoId = \"\";\n      const parsedUrl = new URL(url);\n      if (parsedUrl.hostname.includes(\"youtube.com\")) {\n        videoId = parsedUrl.searchParams.get(\"v\");\n      } else if (parsedUrl.hostname.includes(\"youtu.be\")) {\n        videoId = parsedUrl.pathname.substring(1);\n      }\n      return videoId;\n    } catch (error) {\n      console.error(\"Error extracting Video ID:\", error);\n      return null;\n    }\n  };\n  const fetchYouTubeDetails = async videoId => {\n    try {\n      const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`);\n      const data = await response.json();\n      if (!data.items || data.items.length === 0) {\n        showSnackbar(\"No details found for this video.\");\n        return null;\n      }\n      const videoDetails = data.items[0].snippet;\n      const title = videoDetails.title;\n      const description = videoDetails.description.split(\"\\n\")[0]; // First paragraph as summary\n      const premiered = videoDetails.publishedAt.split(\"T\")[0]; // YYYY-MM-DD format\n\n      return {\n        name: title,\n        url: youtubeURL,\n        premiered,\n        description\n      };\n    } catch (error) {\n      console.error(\"Error fetching YouTube details:\", error);\n      showSnackbar(\"Failed to fetch video details.\");\n      return null;\n    }\n  };\n  const handleAddMovie = async () => {\n    const videoId = extractVideoId(youtubeURL);\n    if (!videoId) {\n      showSnackbar(\"Invalid YouTube URL.\");\n      return;\n    }\n    const movieData = await fetchYouTubeDetails(videoId);\n    if (movieData) {\n      await addDoc(collection(db, \"movies\"), movieData);\n      setYoutubeURL(\"\");\n      fetchMovies();\n      showSnackbar(\"Movie Added Successfully!\");\n    }\n  };\n  const handleDeleteMovie = async id => {\n    await deleteDoc(doc(db, \"movies\", id));\n    fetchMovies();\n    showSnackbar(\"Movie Deleted Successfully!\");\n  };\n  const showSnackbar = message => {\n    setSnackbarMessage(message);\n    const snackbar = document.getElementById(\"snackbar\");\n    snackbar.className = \"snackbar show\";\n    setTimeout(() => {\n      snackbar.className = snackbar.className.replace(\"show\", \"\");\n    }, 3000);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movies-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"movies-title\",\n      children: \"\\uD83C\\uDFAC Featured Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-movie-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter YouTube URL\",\n        value: youtubeURL,\n        onChange: e => setYoutubeURL(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddMovie,\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movies-grid\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-card\",\n        onClick: () => setSelectedMovie(movie),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: `https://img.youtube.com/vi/${extractVideoId(movie.url)}/maxresdefault.jpg`,\n          alt: movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"movie-title\",\n            children: movie.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-date\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"Premiered:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, this), \" \", movie.premiered]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"movie-description\",\n            children: movie.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"delete-button\",\n            onClick: () => handleDeleteMovie(movie.id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), selectedMovie && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-overlay\",\n        onClick: () => setSelectedMovie(null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n          width: \"800\",\n          height: \"450\",\n          src: `https://www.youtube.com/embed/${extractVideoId(selectedMovie.url)}?autoplay=1`,\n          title: selectedMovie.name,\n          allow: \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n          allowFullScreen: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"snackbar\",\n      className: \"snackbar\",\n      children: snackbarMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(MoviesPage, \"nXlCW24lZslhTMLBe7wA6l1y2dk=\");\n_c = MoviesPage;\nexport default MoviesPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"names":["React","useState","useEffect","NavigationBar","db","collection","getDocs","addDoc","deleteDoc","doc","jsxDEV","_jsxDEV","Fragment","_Fragment","MoviesPage","_s","movies","setMovies","youtubeURL","setYoutubeURL","snackbarMessage","setSnackbarMessage","selectedMovie","setSelectedMovie","fetchMovies","querySnapshot","docs","map","id","data","extractVideoId","url","videoId","parsedUrl","URL","hostname","includes","searchParams","get","pathname","substring","error","console","fetchYouTubeDetails","response","fetch","process","env","REACT_APP_YOUTUBE_API_KEY","json","items","length","showSnackbar","videoDetails","snippet","title","description","split","premiered","publishedAt","name","handleAddMovie","movieData","handleDeleteMovie","message","snackbar","document","getElementById","className","setTimeout","replace","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","movie","src","alt","width","height","allow","allowFullScreen","_c","$RefreshReg$"],"sources":["C:/Users/sagar/OneDrive/Documents/host/menm/ragnar/src/pages/movies.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport NavigationBar from \"../components/NavigationBar\";\r\nimport { db } from \"../firebaseConfig\";\r\nimport { collection, getDocs, addDoc, deleteDoc, doc } from \"firebase/firestore\";\r\nimport \"../styles/movies.css\";\r\n\r\nfunction MoviesPage() {\r\n  const [movies, setMovies] = useState([]);\r\n  const [youtubeURL, setYoutubeURL] = useState(\"\");\r\n  const [snackbarMessage, setSnackbarMessage] = useState(\"\");\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n\r\n  useEffect(() => {\r\n    fetchMovies();\r\n  }, []);\r\n\r\n  const fetchMovies = async () => {\r\n    const querySnapshot = await getDocs(collection(db, \"movies\"));\r\n    setMovies(querySnapshot.docs.map((doc) => ({ id: doc.id, ...doc.data() })));\r\n  };\r\n\r\n  const extractVideoId = (url) => {\r\n    try {\r\n      let videoId = \"\";\r\n      const parsedUrl = new URL(url);\r\n\r\n      if (parsedUrl.hostname.includes(\"youtube.com\")) {\r\n        videoId = parsedUrl.searchParams.get(\"v\");\r\n      } else if (parsedUrl.hostname.includes(\"youtu.be\")) {\r\n        videoId = parsedUrl.pathname.substring(1);\r\n      }\r\n\r\n      return videoId;\r\n    } catch (error) {\r\n      console.error(\"Error extracting Video ID:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const fetchYouTubeDetails = async (videoId) => {\r\n    try {\r\n      const response = await fetch(\r\n        `https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`\r\n      );\r\n      const data = await response.json();\r\n\r\n      if (!data.items || data.items.length === 0) {\r\n        showSnackbar(\"No details found for this video.\");\r\n        return null;\r\n      }\r\n\r\n      const videoDetails = data.items[0].snippet;\r\n      const title = videoDetails.title;\r\n      const description = videoDetails.description.split(\"\\n\")[0]; // First paragraph as summary\r\n      const premiered = videoDetails.publishedAt.split(\"T\")[0]; // YYYY-MM-DD format\r\n\r\n      return {\r\n        name: title,\r\n        url: youtubeURL,\r\n        premiered,\r\n        description,\r\n      };\r\n    } catch (error) {\r\n      console.error(\"Error fetching YouTube details:\", error);\r\n      showSnackbar(\"Failed to fetch video details.\");\r\n      return null;\r\n    }\r\n  };\r\n\r\n  const handleAddMovie = async () => {\r\n    const videoId = extractVideoId(youtubeURL);\r\n    if (!videoId) {\r\n      showSnackbar(\"Invalid YouTube URL.\");\r\n      return;\r\n    }\r\n\r\n    const movieData = await fetchYouTubeDetails(videoId);\r\n\r\n    if (movieData) {\r\n      await addDoc(collection(db, \"movies\"), movieData);\r\n      setYoutubeURL(\"\");\r\n      fetchMovies();\r\n      showSnackbar(\"Movie Added Successfully!\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteMovie = async (id) => {\r\n    await deleteDoc(doc(db, \"movies\", id));\r\n    fetchMovies();\r\n    showSnackbar(\"Movie Deleted Successfully!\");\r\n  };\r\n\r\n  const showSnackbar = (message) => {\r\n    setSnackbarMessage(message);\r\n    const snackbar = document.getElementById(\"snackbar\");\r\n    snackbar.className = \"snackbar show\";\r\n    setTimeout(() => {\r\n      snackbar.className = snackbar.className.replace(\"show\", \"\");\r\n    }, 3000);\r\n  };\r\n\r\n  return (\r\n    <div className=\"movies-container\">\r\n      <NavigationBar />\r\n      <h1 className=\"movies-title\">🎬 Featured Movies</h1>\r\n\r\n      <div className=\"add-movie-form\">\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter YouTube URL\"\r\n          value={youtubeURL}\r\n          onChange={(e) => setYoutubeURL(e.target.value)}\r\n        />\r\n        <button onClick={handleAddMovie}>Post</button>\r\n      </div>\r\n\r\n      <div className=\"movies-grid\">\r\n        {movies.map((movie) => (\r\n          <div key={movie.id} className=\"movie-card\" onClick={() => setSelectedMovie(movie)}>\r\n            <img\r\n              src={`https://img.youtube.com/vi/${extractVideoId(movie.url)}/maxresdefault.jpg`}\r\n              alt={movie.name}\r\n            />\r\n            <div className=\"movie-card-content\">\r\n              <h3 className=\"movie-title\">{movie.name}</h3>\r\n              <p className=\"movie-date\">\r\n                <span>Premiered:</span> {movie.premiered}\r\n              </p>\r\n              <p className=\"movie-description\">{movie.description}</p>\r\n\r\n              <button className=\"delete-button\" onClick={() => handleDeleteMovie(movie.id)}>Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {selectedMovie && (\r\n        <>\r\n          <div className=\"modal-overlay\" onClick={() => setSelectedMovie(null)}></div>\r\n          <div className=\"video-modal\">\r\n            <iframe\r\n              width=\"800\"\r\n              height=\"450\"\r\n              src={`https://www.youtube.com/embed/${extractVideoId(selectedMovie.url)}?autoplay=1`}\r\n              title={selectedMovie.name}\r\n              allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n              allowFullScreen\r\n            ></iframe>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      <div id=\"snackbar\" className=\"snackbar\">{snackbarMessage}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MoviesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}