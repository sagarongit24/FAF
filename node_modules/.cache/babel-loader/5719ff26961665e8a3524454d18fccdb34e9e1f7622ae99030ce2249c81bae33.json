{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar\\\\OneDrive\\\\Documents\\\\host\\\\menm\\\\src\\\\pages\\\\music.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport { db, storage } from \"../firebaseConfig\";\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicPage() {\n  _s();\n  const [tracks, setTracks] = useState([]);\n  const [newTrack, setNewTrack] = useState({\n    name: \"\",\n    album: \"\",\n    file: null,\n    coverImage: null\n  });\n  useEffect(() => {\n    fetchTracks();\n  }, []);\n  const fetchTracks = async () => {\n    const querySnapshot = await getDocs(collection(db, \"music\"));\n    setTracks(querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    })));\n  };\n  const handleUpload = async () => {\n    if (!newTrack.file) {\n      alert(\"Please select a file.\");\n      return;\n    }\n    const storageRef = ref(storage, `music/${newTrack.file.name}`);\n    await uploadBytes(storageRef, newTrack.file);\n    const url = await getDownloadURL(storageRef);\n    await addDoc(collection(db, \"music\"), {\n      ...newTrack,\n      url\n    });\n    fetchTracks();\n  };\n  const handleDelete = async id => {\n    await deleteDoc(doc(db, \"music\", id));\n    fetchTracks();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Track Name\",\n      onChange: e => setNewTrack({\n        ...newTrack,\n        name: e.target.value\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"audio/wav\",\n      onChange: e => setNewTrack({\n        ...newTrack,\n        file: e.target.files[0]\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Upload Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), tracks.map(track => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: track.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n        controls: true,\n        children: /*#__PURE__*/_jsxDEV(\"source\", {\n          src: track.url,\n          type: \"audio/wav\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(track.id),\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this)]\n    }, track.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicPage, \"V91G3sE1t5yLW26rwSQTerBIsRE=\");\n_c = MusicPage;\nexport default MusicPage;\nvar _c;\n$RefreshReg$(_c, \"MusicPage\");","map":{"version":3,"names":["React","useState","useEffect","NavigationBar","db","storage","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","ref","uploadBytes","getDownloadURL","jsxDEV","_jsxDEV","MusicPage","_s","tracks","setTracks","newTrack","setNewTrack","name","album","file","coverImage","fetchTracks","querySnapshot","docs","map","id","data","handleUpload","alert","storageRef","url","handleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","value","accept","files","onClick","track","controls","src","_c","$RefreshReg$"],"sources":["C:/Users/sagar/OneDrive/Documents/host/menm/src/pages/music.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport NavigationBar from \"../components/NavigationBar\";\r\nimport { db, storage } from \"../firebaseConfig\";\r\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\r\nimport { ref, uploadBytes, getDownloadURL } from \"firebase/storage\";\r\n\r\nfunction MusicPage() {\r\n  const [tracks, setTracks] = useState([]);\r\n  const [newTrack, setNewTrack] = useState({ name: \"\", album: \"\", file: null, coverImage: null });\r\n\r\n  useEffect(() => {\r\n    fetchTracks();\r\n  }, []);\r\n\r\n  const fetchTracks = async () => {\r\n    const querySnapshot = await getDocs(collection(db, \"music\"));\r\n    setTracks(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!newTrack.file) {\r\n      alert(\"Please select a file.\");\r\n      return;\r\n    }\r\n\r\n    const storageRef = ref(storage, `music/${newTrack.file.name}`);\r\n    await uploadBytes(storageRef, newTrack.file);\r\n    const url = await getDownloadURL(storageRef);\r\n\r\n    await addDoc(collection(db, \"music\"), { ...newTrack, url });\r\n    fetchTracks();\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    await deleteDoc(doc(db, \"music\", id));\r\n    fetchTracks();\r\n  };\r\n\r\n  return (\r\n    <div className=\"page-container\">\r\n      <NavigationBar />\r\n      <h1 className=\"text-2xl font-bold\">Music</h1>\r\n\r\n      {/* Upload Music */}\r\n      <input type=\"text\" placeholder=\"Track Name\" onChange={(e) => setNewTrack({ ...newTrack, name: e.target.value })} />\r\n      <input type=\"file\" accept=\"audio/wav\" onChange={(e) => setNewTrack({ ...newTrack, file: e.target.files[0] })} />\r\n      <button onClick={handleUpload}>Upload Music</button>\r\n\r\n      {/* List Tracks */}\r\n      {tracks.map((track) => (\r\n        <div key={track.id}>\r\n          <h2>{track.name}</h2>\r\n          <audio controls>\r\n            <source src={track.url} type=\"audio/wav\" />\r\n          </audio>\r\n          <button onClick={() => handleDelete(track.id)}>Delete</button>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MusicPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}