{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sagar\\\\OneDrive\\\\Documents\\\\host\\\\menm\\\\ragnar\\\\src\\\\pages\\\\movies.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport NavigationBar from \"../components/NavigationBar\";\nimport ReactPlayer from \"react-player\";\nimport { db } from \"../firebaseConfig\";\nimport { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YOUTUBE_API_KEY = \"YOUR_YOUTUBE_API_KEY\";\nfunction MoviesPage() {\n  _s();\n  const [movies, setMovies] = useState([]);\n  const [newMovie, setNewMovie] = useState({\n    name: \"\",\n    url: \"\",\n    premiered: \"\",\n    description: \"\",\n    credits: \"\"\n  });\n  const [editingMovie, setEditingMovie] = useState(null);\n  useEffect(() => {\n    fetchMovies();\n  }, []);\n  const fetchMovies = async () => {\n    const querySnapshot = await getDocs(collection(db, \"movies\"));\n    setMovies(querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    })));\n  };\n  const extractSummary = description => {\n    const lines = description.split(\"\\n\");\n    let summary = \"\";\n    for (const line of lines) {\n      if (line.trim() === \"\") break; // Stop at the first empty line\n      summary += line + \" \";\n    }\n    return summary.trim();\n  };\n  const fetchYouTubeDetails = async videoUrl => {\n    var _videoUrl$split$;\n    const videoId = new URL(videoUrl).searchParams.get(\"v\") || ((_videoUrl$split$ = videoUrl.split(\"youtu.be/\")[1]) === null || _videoUrl$split$ === void 0 ? void 0 : _videoUrl$split$.split(\"?\")[0]);\n    if (!videoId) {\n      alert(\"Invalid YouTube URL.\");\n      return;\n    }\n    try {\n      const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${YOUTUBE_API_KEY}`);\n      const data = await response.json();\n      if (data.items.length === 0) {\n        alert(\"Video details not found.\");\n        return;\n      }\n      const videoDetails = data.items[0].snippet;\n      const summary = extractSummary(videoDetails.description);\n      setNewMovie({\n        ...newMovie,\n        name: videoDetails.title,\n        description: summary,\n        premiered: videoDetails.publishedAt.split(\"T\")[0] // Format: YYYY-MM-DD\n      });\n    } catch (error) {\n      console.error(\"Error fetching video details:\", error);\n    }\n  };\n  const handleAddMovie = async () => {\n    if (!newMovie.name || !newMovie.url) {\n      alert(\"Movie Name and URL are required\");\n      return;\n    }\n    await addDoc(collection(db, \"movies\"), newMovie);\n    setNewMovie({\n      name: \"\",\n      url: \"\",\n      premiered: \"\",\n      description: \"\",\n      credits: \"\"\n    });\n    fetchMovies();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(NavigationBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold\",\n      children: \"Movies\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-4 p-4 border rounded-lg shadow-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-xl font-semibold\",\n        children: \"Add New Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"YouTube URL\",\n        value: newMovie.url,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          url: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchYouTubeDetails(newMovie.url),\n        children: \"Fetch Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Name\",\n        value: newMovie.name,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Premiered Date\",\n        value: newMovie.premiered,\n        readOnly: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        value: newMovie.description,\n        onChange: e => setNewMovie({\n          ...newMovie,\n          description: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddMovie,\n        children: \"Add Movie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"movie-list\",\n      children: movies.map(movie => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-item p-4 border rounded-lg shadow-lg\",\n        children: [/*#__PURE__*/_jsxDEV(ReactPlayer, {\n          url: movie.url,\n          controls: true,\n          width: \"100%\",\n          height: \"180px\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-lg font-semibold\",\n          children: movie.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Premiered:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 18\n          }, this), \" \", movie.premiered]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Description:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 18\n          }, this), \" \", movie.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 15\n        }, this)]\n      }, movie.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 7\n  }, this);\n}\n_s(MoviesPage, \"dUsJU1e7wdoKabjNnn5iQMp5nME=\");\n_c = MoviesPage;\nexport default MoviesPage;\nvar _c;\n$RefreshReg$(_c, \"MoviesPage\");","map":{"version":3,"names":["React","useState","useEffect","NavigationBar","ReactPlayer","db","collection","getDocs","addDoc","updateDoc","deleteDoc","doc","jsxDEV","_jsxDEV","YOUTUBE_API_KEY","MoviesPage","_s","movies","setMovies","newMovie","setNewMovie","name","url","premiered","description","credits","editingMovie","setEditingMovie","fetchMovies","querySnapshot","docs","map","id","data","extractSummary","lines","split","summary","line","trim","fetchYouTubeDetails","videoUrl","_videoUrl$split$","videoId","URL","searchParams","get","alert","response","fetch","json","items","length","videoDetails","snippet","title","publishedAt","error","console","handleAddMovie","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","readOnly","movie","controls","width","height","_c","$RefreshReg$"],"sources":["C:/Users/sagar/OneDrive/Documents/host/menm/ragnar/src/pages/movies.js"],"sourcesContent":["  import React, { useState, useEffect } from \"react\";\r\n  import NavigationBar from \"../components/NavigationBar\";\r\n  import ReactPlayer from \"react-player\";\r\n  import { db } from \"../firebaseConfig\";\r\n  import { collection, getDocs, addDoc, updateDoc, deleteDoc, doc } from \"firebase/firestore\";\r\n\r\n  const YOUTUBE_API_KEY = \"YOUR_YOUTUBE_API_KEY\";\r\n\r\n  function MoviesPage() {\r\n    const [movies, setMovies] = useState([]);\r\n    const [newMovie, setNewMovie] = useState({ name: \"\", url: \"\", premiered: \"\", description: \"\", credits: \"\" });\r\n    const [editingMovie, setEditingMovie] = useState(null);\r\n\r\n    useEffect(() => {\r\n      fetchMovies();\r\n    }, []);\r\n\r\n    const fetchMovies = async () => {\r\n      const querySnapshot = await getDocs(collection(db, \"movies\"));\r\n      setMovies(querySnapshot.docs.map(doc => ({ id: doc.id, ...doc.data() })));\r\n    };\r\n\r\n    const extractSummary = (description) => {\r\n      const lines = description.split(\"\\n\");\r\n      let summary = \"\";\r\n\r\n      for (const line of lines) {\r\n        if (line.trim() === \"\") break; // Stop at the first empty line\r\n        summary += line + \" \";\r\n      }\r\n      return summary.trim();\r\n    };\r\n\r\n    const fetchYouTubeDetails = async (videoUrl) => {\r\n      const videoId = new URL(videoUrl).searchParams.get(\"v\") || videoUrl.split(\"youtu.be/\")[1]?.split(\"?\")[0];\r\n      if (!videoId) {\r\n        alert(\"Invalid YouTube URL.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`https://www.googleapis.com/youtube/v3/videos?part=snippet&id=${videoId}&key=${YOUTUBE_API_KEY}`);\r\n        const data = await response.json();\r\n\r\n        if (data.items.length === 0) {\r\n          alert(\"Video details not found.\");\r\n          return;\r\n        }\r\n\r\n        const videoDetails = data.items[0].snippet;\r\n        const summary = extractSummary(videoDetails.description);\r\n\r\n        setNewMovie({\r\n          ...newMovie,\r\n          name: videoDetails.title,\r\n          description: summary,\r\n          premiered: videoDetails.publishedAt.split(\"T\")[0], // Format: YYYY-MM-DD\r\n        });\r\n      } catch (error) {\r\n        console.error(\"Error fetching video details:\", error);\r\n      }\r\n    };\r\n\r\n    const handleAddMovie = async () => {\r\n      if (!newMovie.name || !newMovie.url) {\r\n        alert(\"Movie Name and URL are required\");\r\n        return;\r\n      }\r\n\r\n      await addDoc(collection(db, \"movies\"), newMovie);\r\n      setNewMovie({ name: \"\", url: \"\", premiered: \"\", description: \"\", credits: \"\" });\r\n      fetchMovies();\r\n    };\r\n\r\n    return (\r\n      <div className=\"page-container\">\r\n        <NavigationBar />\r\n        <h1 className=\"text-2xl font-bold\">Movies</h1>\r\n\r\n        {/* Add Movie Form */}\r\n        <div className=\"mb-4 p-4 border rounded-lg shadow-lg\">\r\n          <h2 className=\"text-xl font-semibold\">Add New Movie</h2>\r\n          <input type=\"text\" placeholder=\"YouTube URL\" value={newMovie.url} onChange={(e) => setNewMovie({ ...newMovie, url: e.target.value })} />\r\n          <button onClick={() => fetchYouTubeDetails(newMovie.url)}>Fetch Details</button>\r\n          \r\n          <input type=\"text\" placeholder=\"Name\" value={newMovie.name} onChange={(e) => setNewMovie({ ...newMovie, name: e.target.value })} />\r\n          <input type=\"text\" placeholder=\"Premiered Date\" value={newMovie.premiered} readOnly />\r\n          <textarea placeholder=\"Description\" value={newMovie.description} onChange={(e) => setNewMovie({ ...newMovie, description: e.target.value })} />\r\n\r\n          <button onClick={handleAddMovie}>Add Movie</button>\r\n        </div>\r\n\r\n        {/* Movie List */}\r\n        <div className=\"movie-list\">\r\n          {movies.map((movie) => (\r\n            <div key={movie.id} className=\"movie-item p-4 border rounded-lg shadow-lg\">\r\n              <ReactPlayer url={movie.url} controls width=\"100%\" height=\"180px\" />\r\n              <h3 className=\"text-lg font-semibold\">{movie.name}</h3>\r\n              <p><strong>Premiered:</strong> {movie.premiered}</p>\r\n              <p><strong>Description:</strong> {movie.description}</p>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  export default MoviesPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}